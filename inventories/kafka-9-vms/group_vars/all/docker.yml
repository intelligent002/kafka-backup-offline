# === Nodes startup and shutdown order =================================================================================

# Defines the order of starting cluster nodes.
startup_order:
  - node-1
  - node-2
  - node-3
  - node-4
  - node-5
  - node-6
  - node-7
  - node-8
  - node-9

# Defines the order of shutting down cluster nodes.
shutdown_order:
  - node-9
  - node-8
  - node-7
  - node-6
  - node-5
  - node-4
  - node-3
  - node-2
  - node-1

# === Nodes startup docker commands ====================================================================================

docker_command_controllers_run: >
  docker run -d --restart=always
  --name={{ hostvars[item]['hostname'] }} -h {{ hostvars[item]['hostname'] }}
  -p {{ hostvars[item]['port_jmx_monitoring_ext'] }}:{{ hostvars[item]['port_jmx_monitoring_int'] }}
  -p {{ hostvars[item]['port_control_plane_ext'] }}:{{ hostvars[item]['port_control_plane_int'] }}
  -e KAFKA_HEAP_OPTS="-Xmx512M -Xms512M"
  -e KAFKA_JMX_OPTS="
  -Djava.rmi.server.hostname={{ hostvars[item]['ansible_host'] }}
  -Dcom.sun.management.jmxremote
  -Dcom.sun.management.jmxremote.port={{ hostvars[item]['port_jmx_monitoring_int'] }}
  -Dcom.sun.management.jmxremote.rmi.port={{ hostvars[item]['port_jmx_monitoring_int'] }}
  -Dcom.sun.management.jmxremote.authenticate=false
  -Dcom.sun.management.jmxremote.ssl=false
  "
  -v {{ hostvars[item]['node_config_path'] }}:/mnt/shared/config
  -v {{ hostvars[item]['node_certificates_path'] }}:/etc/kafka/secrets
  -v {{ hostvars[item]['node_credentials_path'] }}:/credentials
  -v {{ hostvars[item]['node_data_path'] }}:/var/lib/kafka/data
  -v {{ hostvars[item]['node_meta_path'] }}:/var/lib/kafka/meta
  -v {{ hostvars[item]['node_logs_path'] }}:/opt/kafka/logs
  apache/kafka:3.9.0
  /opt/kafka/bin/kafka-server-start.sh /mnt/shared/config/kraft.properties

docker_command_brokers_run: >
  docker run -d --restart=always
  --name={{ hostvars[item]['hostname'] }} -h {{ hostvars[item]['hostname'] }}
  -p {{ hostvars[item]['port_jmx_monitoring_ext'] }}:{{ hostvars[item]['port_jmx_monitoring_int'] }}
  -p {{ hostvars[item]['port_replication_ext'] }}:{{ hostvars[item]['port_replication_int'] }}
  -p {{ hostvars[item]['port_consumer_mtls_ext'] }}:{{ hostvars[item]['port_consumer_mtls_int'] }}
  -p {{ hostvars[item]['port_consumer_sasl_ssl_ext'] }}:{{ hostvars[item]['port_consumer_sasl_ssl_int'] }}
  -e KAFKA_HEAP_OPTS="-Xmx1G -Xms1G"
  -e KAFKA_JMX_OPTS="
  -Djava.rmi.server.hostname={{ hostvars[item]['ansible_host'] }}
  -Dcom.sun.management.jmxremote
  -Dcom.sun.management.jmxremote.port={{ hostvars[item]['port_jmx_monitoring_int'] }}
  -Dcom.sun.management.jmxremote.rmi.port={{ hostvars[item]['port_jmx_monitoring_int'] }}
  -Dcom.sun.management.jmxremote.authenticate=false
  -Dcom.sun.management.jmxremote.ssl=false
  "
  -v {{ hostvars[item]['node_config_path'] }}:/mnt/shared/config
  -v {{ hostvars[item]['node_certificates_path'] }}:/etc/kafka/secrets
  -v {{ hostvars[item]['node_credentials_path'] }}:/credentials
  -v {{ hostvars[item]['node_data_path'] }}:/var/lib/kafka/data
  -v {{ hostvars[item]['node_meta_path'] }}:/var/lib/kafka/meta
  -v {{ hostvars[item]['node_logs_path'] }}:/opt/kafka/logs
  apache/kafka:3.9.0
  /opt/kafka/bin/kafka-server-start.sh /mnt/shared/config/kraft.properties

docker_command_connect_run: >
  docker run -d --restart=always
  --name={{ hostvars[item]['hostname'] }} -h {{ hostvars[item]['hostname'] }}
  -p {{ hostvars[item]['port_jmx_monitoring_ext'] }}:{{ hostvars[item]['port_jmx_monitoring_int'] }}
  -p {{ hostvars[item]['port_connect_rest_ext'] }}:{{ hostvars[item]['port_connect_rest_int'] }}
  -e KAFKA_HEAP_OPTS="-Xmx512M -Xms512M"
  -e KAFKA_JMX_OPTS="
  -Djava.rmi.server.hostname={{ hostvars[item]['ansible_host'] }}
  -Dcom.sun.management.jmxremote
  -Dcom.sun.management.jmxremote.port={{ hostvars[item]['port_jmx_monitoring_int'] }}
  -Dcom.sun.management.jmxremote.rmi.port={{ hostvars[item]['port_jmx_monitoring_int'] }}
  -Dcom.sun.management.jmxremote.authenticate=false
  -Dcom.sun.management.jmxremote.ssl=false
  "
  -v {{ hostvars[item]['node_config_path'] }}:/mnt/shared/config
  -v {{ hostvars[item]['node_certificates_path'] }}:/etc/kafka/secrets
  -v {{ hostvars[item]['node_credentials_path'] }}:/credentials
  -v {{ hostvars[item]['node_data_path'] }}:/var/lib/kafka/data
  -v {{ hostvars[item]['node_meta_path'] }}:/var/lib/kafka/meta
  -v {{ hostvars[item]['node_logs_path'] }}:/opt/kafka/logs
  -v {{ hostvars[item]['node_plugins_path'] }}:/usr/share/java
  apache/kafka:3.9.0
  /opt/kafka/bin/connect-distributed.sh /mnt/shared/config/kraft.properties

docker_command_balancer_run: >
  docker run -d --restart=always \
    --name=kafka-connect-balancer -h kafka-connect-balancer \
    -p {{ port_connect_rest_ext }}:{{ port_connect_rest_int }} \
    --health-cmd="response=\$(curl -s --cacert /data/cluster/certificates/CA/ca.crt https://{{ hostvars['node-0']['hostname'] }}:{{ port_connect_rest_int }}/); if echo \"\$response\" | grep -q \"kafka_cluster_id\"; then echo \"Status is OK\" && exit 0; else echo \"Status is not OK\" && exit 1; fi" \
    --health-interval=60s \
    --health-timeout=10s \
    --health-retries=5 \
    --health-start-period=5s \
    -v /data:/data \
    -v {{ node_config_path }}/kafka-connect-balancer.conf:/etc/nginx/nginx.conf:ro \
    nginx:1.27.4-alpine3.21

docker_command_data_format: >
  docker run --rm
  -v {{ node_config_path }}/:/mnt/shared/config 
  -v {{ node_data_path }}:/var/lib/kafka/data 
  -v {{ node_meta_path }}:/var/lib/kafka/meta 
  -v {{ node_logs_path }}:/opt/kafka/logs 
  -v {{ node_certificates_path }}/:/etc/kafka/secrets 
  apache/kafka:3.9.0 
  /opt/kafka/bin/kafka-storage.sh format 
  --cluster-id {{ cluster_id }} 
  --add-scram 'SCRAM-SHA-512=[name=admin,password=insecure]' 
  --config /mnt/shared/config/kraft.properties
