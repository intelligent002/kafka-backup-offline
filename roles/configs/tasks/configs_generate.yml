---
- name: Determine the group for the host dynamically
  tags: configs_generate
  set_fact:
    relevant_group: "{{ item }}"
  with_items: "{{ group_names }}"
  when: item not in ['all', 'cluster', 'central']
  run_once: false

- name: Determine the template dynamically based on the group
  tags: configs_generate
  set_fact:
    selected_template: "server_properties_{{ relevant_group }}.j2"

- name: Ensure Config directory exists on nodes
  tags:
    - configs_generate
  ansible.builtin.file:
    path: "{{ node_config_path }}"
    state: directory
    owner: "{{ owner_user_data }}"
    group: "{{ owner_group_data }}"
    mode: '{{ chmod_configs }}'

- name: Deploy Config files to nodes
  tags: configs_generate
  ansible.builtin.template:
    src: "{{ selected_template }}"
    dest: "{{ node_config_file }}"
    owner: "{{ owner_user_data }}"
    group: "{{ owner_group_data }}"
    mode: '{{ chmod_configs }}'

- name: Ensure Config directory exists on node-00
  tags:
    - configs_generate
  delegate_to: node-00
  run_once: true
  ansible.builtin.file:
    path: "{{ hostvars['node-00']['node_config_path'] }}"
    state: directory
    owner: "{{ owner_user_data }}"
    group: "{{ owner_group_data }}"
    mode: '{{ chmod_configs }}'

- name: Deploy Connect Balancer config on node-00
  tags: configs_generate
  delegate_to: node-00
  run_once: true
  ansible.builtin.template:
    src: "connect_balancer.j2"
    dest: "{{ hostvars['node-00']['node_config_path'] }}/balancer-connect.conf"
    owner: "{{ owner_user_data }}"
    group: "{{ owner_group_data }}"
    mode: '{{ chmod_configs }}'