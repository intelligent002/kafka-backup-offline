admin:
  access_log_path: "/dev/stdout"
  address:
    socket_address:
      address: 0.0.0.0
      port_value: {{ port_ksql_balancer_admin_int }}

static_resources:
  listeners:
  - name: kafka_ksql_listener
    address:
      socket_address:
        address: 0.0.0.0
        port_value: {{ port_ksql_balancer_int }}
    filter_chains:
    - filters:
      - name: envoy.filters.network.http_connection_manager
        typed_config:
          "@type": type.googleapis.com/envoy.extensions.filters.network.http_connection_manager.v3.HttpConnectionManager
          stat_prefix: ingress_http
          codec_type: AUTO
          access_log:
          - name: envoy.access_loggers.stdout
            typed_config:
              "@type": type.googleapis.com/envoy.extensions.access_loggers.stream.v3.StdoutAccessLog
          route_config:
            virtual_hosts:
            - name: kafka_ksql
              domains: ["*"]
              routes:
              - match:
                  prefix: "/"
                route:
                  cluster: kafka_ksql_cluster
          http_filters:
          - name: envoy.filters.http.router
            typed_config:
              "@type": type.googleapis.com/envoy.extensions.filters.http.router.v3.Router
          http2_protocol_options:
            max_concurrent_streams: 100
            initial_stream_window_size: 65536
            initial_connection_window_size: 1048576

      transport_socket:
        name: envoy.transport_sockets.tls
        typed_config:
          "@type": type.googleapis.com/envoy.extensions.transport_sockets.tls.v3.DownstreamTlsContext
          common_tls_context:
            tls_params:
              tls_minimum_protocol_version: TLSv1_2
              tls_maximum_protocol_version: TLSv1_3
            tls_certificates:
              certificate_chain:
                filename: "/data/cluster/certificates/nodes/{{ hostvars['node-00']['hostname'] }}/{{ hostvars['node-00']['hostname'] }}.crt"
              private_key:
                filename: "/data/cluster/certificates/nodes/{{ hostvars['node-00']['hostname'] }}/{{ hostvars['node-00']['hostname'] }}.key"
            validation_context:
              trusted_ca:
                filename: "/data/cluster/certificates/CA/ca.crt"
            alpn_protocols: ["h2", "http/1.1"]

  clusters:
  - name: kafka_ksql_cluster
    type: STRICT_DNS
    connect_timeout: 5s
    dns_lookup_family: V4_ONLY
    lb_policy: LEAST_REQUEST
    max_requests_per_connection: 1
    common_lb_config:
      close_connections_on_host_set_change: true
    circuit_breakers:
      thresholds:
        - priority: DEFAULT
          max_connections: 100
          max_pending_requests: 50
          max_requests: 100
          max_retries: 3
    health_checks:
      - timeout: 2s
        interval: 5s
        unhealthy_threshold: 2
        healthy_threshold: 2
        http_health_check:
          path: "/info"
          expected_statuses:
            - start: 200
              end: 299
    per_connection_buffer_limit_bytes: 32768
    upstream_connection_options:
      tcp_keepalive:
        keepalive_time: 3
    outlier_detection:
      consecutive_5xx: 3
      interval: 10s
      base_ejection_time: 30s
      max_ejection_percent: 50
    transport_socket:
      name: envoy.transport_sockets.tls
      typed_config:
        "@type": type.googleapis.com/envoy.extensions.transport_sockets.tls.v3.UpstreamTlsContext
        common_tls_context:
          tls_params:
            tls_minimum_protocol_version: TLSv1_3
            tls_maximum_protocol_version: TLSv1_3
          tls_certificates:
            - certificate_chain:
                filename: "/data/cluster/certificates/nodes/node-00.intel.r7g.org/node-00.intel.r7g.org.crt"
              private_key:
                filename: "/data/cluster/certificates/nodes/node-00.intel.r7g.org/node-00.intel.r7g.org.key"
          validation_context:
            trusted_ca:
              filename: "/data/cluster/certificates/CA/ca.crt"
          alpn_protocols: ["h2", "http/1.1"]
    load_assignment:
      cluster_name: kafka_ksql_cluster
      endpoints:
      - lb_endpoints:
{% for host in groups['ksql'] %}
        - endpoint:
            address:
              socket_address:
                address: {{ hostvars[host]['hostname'] }}
                port_value: {{ port_ksql_rest_ext }}
{% endfor %}
