admin:
  access_log_path: "/dev/stdout"
  address:
    socket_address:
      address: 0.0.0.0
      port_value: {{ port_schema_balancer_admin_int }}

static_resources:
  listeners:
  - name: kafka_schema_listener
    address:
      socket_address:
        address: 0.0.0.0
        port_value: {{ port_schema_balancer_int }}
    filter_chains:
    - filters:
      - name: envoy.filters.network.http_connection_manager
        typed_config:
          "@type": type.googleapis.com/envoy.extensions.filters.network.http_connection_manager.v3.HttpConnectionManager
          stat_prefix: ingress_http
          codec_type: AUTO
          access_log:
          - name: envoy.access_loggers.stdout
            typed_config:
              "@type": type.googleapis.com/envoy.extensions.access_loggers.stream.v3.StdoutAccessLog
          route_config:
            virtual_hosts:
            - name: kafka_schema
              domains: ["*"]
              routes:
              - match:
                  prefix: "/"
                route:
                  cluster: kafka_schema_cluster
          http_filters:
          - name: envoy.filters.http.router
            typed_config:
              "@type": type.googleapis.com/envoy.extensions.filters.http.router.v3.Router
          http2_protocol_options:
            max_concurrent_streams: 100
            initial_stream_window_size: 65536
            initial_connection_window_size: 1048576

      transport_socket:
        name: envoy.transport_sockets.tls
        typed_config:
          "@type": type.googleapis.com/envoy.extensions.transport_sockets.tls.v3.DownstreamTlsContext
          common_tls_context:
            tls_params:
              tls_minimum_protocol_version: TLSv1_2
              tls_maximum_protocol_version: TLSv1_3
            tls_certificates:
              certificate_chain:
                filename: "/data/cluster/certificates/nodes/{{ hostvars['node-00']['hostname'] }}/{{ hostvars['node-00']['hostname'] }}.crt"
              private_key:
                filename: "/data/cluster/certificates/nodes/{{ hostvars['node-00']['hostname'] }}/{{ hostvars['node-00']['hostname'] }}.key"
            validation_context:
              trusted_ca:
                filename: "/data/cluster/certificates/CA/ca.crt"
            alpn_protocols: ["h2", "http/1.1"]

  clusters:
  - name: kafka_schema_cluster
    type: STRICT_DNS
    connect_timeout: 5s
    dns_lookup_family: V4_ONLY
    load_assignment:
      cluster_name: kafka_schema_cluster
      endpoints:
      - lb_endpoints:
{% for host in groups['schema'] %}
        - endpoint:
            address:
              socket_address:
                address: {{ hostvars[host]['hostname'] }}
                port_value: {{ port_schema_rest_ext }}
{% endfor %}
    transport_socket:
      name: envoy.transport_sockets.tls
      typed_config:
        "@type": type.googleapis.com/envoy.extensions.transport_sockets.tls.v3.UpstreamTlsContext
        common_tls_context:
          tls_params:
            tls_minimum_protocol_version: TLSv1_3
            tls_maximum_protocol_version: TLSv1_3
          validation_context:
            trusted_ca:
              filename: "/data/cluster/certificates/CA/ca.crt"
          alpn_protocols: ["h2", "http/1.1"]
