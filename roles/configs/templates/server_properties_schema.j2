# SCHEMA CONFIG
########################################################################################################################
listeners=https://0.0.0.0:{{ port_schema_rest_int }}
host.name={{ hostvars[inventory_hostname]['hostname'] }}
schema.registry.group.id=cluster-schema

# Kafka Connection (Using SSL)
kafkastore.bootstrap.servers={%- for host in groups['brokers'] -%}
    SSL://{{ hostvars[host]['hostname'] }}:{{ port_consumer_mtls_ext }}{% if not loop.last %},{% endif %}
{% endfor %}

kafkastore.security.protocol=SSL
kafkastore.ssl.enabled.protocols=TLSv1.3
kafkastore.ssl.endpoint.identification.algorithm=HTTPS
kafkastore.ssl.key.password=insecure
kafkastore.ssl.keystore.location=/etc/kafka/secrets/{{ hostvars[inventory_hostname]['hostname'] }}.jks
kafkastore.ssl.keystore.password=insecure
kafkastore.ssl.keystore.type=JKS
kafkastore.ssl.truststore.location=/etc/kafka/secrets/shared.truststore.jks
kafkastore.ssl.truststore.password=insecure
kafkastore.ssl.truststore.type=JKS
kafkastore.topic.replication.factor=3
kafkastore.topic=_schemas

# Enable Inter-Instance Communication
inter.instance.protocol=HTTPS

# Security for Client Authentication
ssl.client.auth=required
ssl.client.authentication=REQUIRED
ssl.enabled.protocols=TLSv1.3
ssl.endpoint.identification.algorithm=HTTPS
ssl.key.password=insecure
ssl.keystore.location=/etc/kafka/secrets/{{ hostvars[inventory_hostname]['hostname'] }}.jks
ssl.keystore.password=insecure
ssl.keystore.type=JKS
ssl.truststore.location=/etc/kafka/secrets/shared.truststore.jks
ssl.truststore.password=insecure
ssl.truststore.type=JKS

# Debugging
debug=true

# Serders
schema.compatibility.level=BACKWARD
