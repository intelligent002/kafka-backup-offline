---
- name: Assign node roles based on inventory group
  tags:
    - containers_run
  set_fact:
    group_roles: "{{ group_roles | default({}) | combine({item: hostvars[item]['group_names'] | difference(['cluster'])}) }}"
  with_items: "{{ startup_order }}"
  run_once: true

- name: Detect RAM & Decide Heap Size
  tags:
    - containers_run
  delegate_to: "{{ item }}"
  set_fact:
    node_specs: "{{ node_specs | default({}) | combine({ item: {'ram_gb': ram_gb, 'heap_size': heap_size} }) }}"
  vars:
    ram_gb: "{{ (ansible_memtotal_mb / 1024) | round | int }}"
    heap_size: >-
      {%- if   ram_gb | int <= 2 -%}  256M
      {%- elif ram_gb | int <= 4 -%}  512M
      {%- elif ram_gb | int <= 8 -%}  1G
      {%- elif ram_gb | int <= 16 -%} 2G
      {%- else -%}                    4G
      {%- endif -%}
  with_items: "{{ startup_order }}"
  when: group_roles[item] is defined
  run_once: true

- name: Debug calculated Heap Size per node
  tags:
    - containers_run
  debug:
    msg: "Node: {{ item }} Detected RAM: {{ node_specs[item]['ram_gb'] }} GB, Decided Heap Size: {{ node_specs[item]['heap_size'] }}, Decided Role: {{ group_roles[item] | default('No role assigned') }}"
  with_items: "{{ startup_order }}"
  run_once: true

- name: Run containers according to assigned roles
  tags:
    - containers_run
  delegate_to: "{{ item }}"
  run_once: true
  shell: >
    {% if 'controllers' in group_roles[item] %} {{ docker_command_controllers_run }}
    {% elif 'brokers' in group_roles[item] %} {{ docker_command_brokers_run }}
    {% elif 'connect' in group_roles[item] %} {{ docker_command_connect_run }}
    {% else %} echo 'Undefined group, no command executed'
    {% endif %}
  with_items: "{{ startup_order }}"
  when: group_roles[item] is defined

- name: Deploy Connect Balancer on node-0
  tags: containers_run
  delegate_to: node-0
  run_once: true
  shell: >
    {{ docker_command_balancer_run }}
