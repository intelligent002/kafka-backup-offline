---
- name: Remove credentials storage on node-00
  tags:
    - credentials_generate
  delegate_to: node-00
  run_once: true
  ansible.builtin.file:
    path: "{{ storage_credentials_path }}"
    state: absent

- name: Create credentials storage on node-00
  tags:
    - credentials_generate
  delegate_to: node-00
  run_once: true
  ansible.builtin.file:
    path: "{{ storage_credentials_path }}"
    state: directory
    owner: "{{ owner_user_data }}"
    group: "{{ owner_group_data }}"
    mode: "{{ chmod_credentials }}"

- name: Generate SASL_SSL credentials file for users
  tags:
    - credentials_generate
  when: use_credentials
  delegate_to: node-00
  run_once: true
  ansible.builtin.template:
    src: "user_credentials_sasl_ssl.j2"
    dest: "{{ storage_credentials_path }}/{{ item.username }}.sasl_ssl.properties"
    owner: "{{ owner_user_data }}"
    group: "{{ owner_group_data }}"
    mode: "{{ chmod_credentials }}"
  loop: "{{ credentials }}"
  loop_control:
    label: "{{ item.username }}"

- name: Generate SSL credentials file for users
  tags:
    - credentials_generate
  when: use_credentials
  delegate_to: node-00
  run_once: true
  changed_when: false
  ansible.builtin.template:
    src: "user_credentials_ssl.j2"
    dest: "{{ storage_credentials_path }}/{{ item.username }}.ssl.properties"
    owner: "{{ owner_user_data }}"
    group: "{{ owner_group_data }}"
    mode: "{{ chmod_credentials }}"
  loop: "{{ credentials }}"
  loop_control:
    label: "{{ item.username }}"

- name: Create credentials directory on nodes
  tags:
    - credentials_generate
  changed_when: false
  ansible.builtin.file:
    path: "{{ node_credentials_path }}"
    state: directory
    owner: "{{ owner_user_data }}"
    group: "{{ owner_group_data }}"
    mode: "{{ chmod_credentials }}"

- name: Distribute admin credentials to all nodes
  tags:
    - credentials_generate
  delegate_to: node-00
  synchronize:
    src: "{{ item.src }}"
    dest: "{{ item.dest }}"
    mode: push
    rsync_opts:
      - "--timeout=60"
      - "--checksum"
  loop_control:
    label: "{{ item.dest }}"
  with_items:
    - { src: "{{ storage_credentials_path }}/admin.ssl.properties",
        dest: "{{ node_credentials_path }}/admin.ssl.properties" }
    - { src: "{{ storage_credentials_path }}/admin.sasl_ssl.properties",
        dest: "{{ node_credentials_path }}/admin.sasl_ssl.properties" }

- name: Distribute connect credentials to connect nodes
  tags:
    - credentials_generate
  delegate_to: node-00
  changed_when: false
  synchronize:
    src: "{{ item.src }}"
    dest: "{{ item.dest }}"
    mode: push
    rsync_opts:
      - "--timeout=60"
      - "--checksum"
  when: "'connect' in group_names"
  loop_control:
    label: "{{ item.dest }}"
  with_items:
    - { src: "{{ storage_credentials_path }}/connector.ssl.properties",
        dest: "{{ node_credentials_path }}/connector.ssl.properties" }
    - { src: "{{ storage_credentials_path }}/connector.sasl_ssl.properties",
        dest: "{{ node_credentials_path }}/connector.sasl_ssl.properties" }
