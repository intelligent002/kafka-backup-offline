# Node ID
node.id={{ node_id }}

##########
# KRaft configuration
##########
# Define the roles for this node (controller and broker)
process.roles=controller
controller.listener.names=CONTROLPLANE-{{ hostvars[inventory_hostname]['port_control_plane_int'] }}
controller.quorum.voters={% for host in (groups['combined'] | default([])) + (groups['controllers'] | default([])) %}
{{ hostvars[host]['node_id'] }}@{{ hostvars[host]['hostname'] }}:{{ hostvars[inventory_hostname]['port_control_plane_int'] }}{% if not loop.last %},{% endif %}{% endfor %}

controller.quorum.election.timeout.ms=30000
cluster.id=AkU3OEVBNTcwNTJENDM2Qk

##########
# Control Plane listener
##########
#listener.name.CONTROLPLANE-{{ hostvars[inventory_hostname]['port_control_plane_int'] }}.sasl.enabled.mechanisms=PLAIN
#listener.name.CONTROLPLANE-{{ hostvars[inventory_hostname]['port_control_plane_int'] }}.plain.sasl.jaas.config=org.apache.kafka.common.security.plain.PlainLoginModule required username="controller-admin" password="controller";
listener.name.CONTROLPLANE-{{ hostvars[inventory_hostname]['port_control_plane_int'] }}.ssl.keystore.location=/etc/kafka/secrets/{{ hostvars[inventory_hostname]['hostname'] }}.keystore.p12
listener.name.CONTROLPLANE-{{ hostvars[inventory_hostname]['port_control_plane_int'] }}.ssl.keystore.password=changeme
listener.name.CONTROLPLANE-{{ hostvars[inventory_hostname]['port_control_plane_int'] }}.ssl.keystore.type=PKCS12
listener.name.CONTROLPLANE-{{ hostvars[inventory_hostname]['port_control_plane_int'] }}.ssl.truststore.location=/etc/kafka/secrets/shared.truststore.jks
listener.name.CONTROLPLANE-{{ hostvars[inventory_hostname]['port_control_plane_int'] }}.ssl.truststore.password=changeme
listener.name.CONTROLPLANE-{{ hostvars[inventory_hostname]['port_control_plane_int'] }}.ssl.truststore.type=PKCS12
listener.name.CONTROLPLANE-{{ hostvars[inventory_hostname]['port_control_plane_int'] }}.ssl.client.auth=required

##########
# Common listener configuration
##########
listener.security.protocol.map=CONTROLPLANE-{{ hostvars[inventory_hostname]['port_control_plane_int'] }}:SSL
listeners=CONTROLPLANE-{{ hostvars[inventory_hostname]['port_control_plane_int'] }}://:{{ hostvars[inventory_hostname]['port_control_plane_int'] }}
# sasl.enabled.mechanisms=
ssl.endpoint.identification.algorithm=HTTPS

##########
# Authorization
##########
authorizer.class.name=org.apache.kafka.metadata.authorizer.StandardAuthorizer
super.users=User:CN=node-1.intel.r7g.org;User:CN=node-2.intel.r7g.org;User:CN=node-3.intel.r7g.org;User:CN=node-4.intel.r7g.org;User:CN=node-5.intel.r7g.org;User:CN=node-6.intel.r7g.org;User:node-1.intel.r7g.org;User:node-2.intel.r7g.org;User:node-3.intel.r7g.org;User:node-4.intel.r7g.org;User:node-5.intel.r7g.org;User:node-6.intel.r7g.org;User:CN=admin;User:admin;


##########
# User provided configuration
##########
default.replication.factor=1
min.insync.replicas=1
offsets.topic.replication.factor=1
transaction.state.log.min.isr=1
transaction.state.log.replication.factor=1

#############################################################################################
# Data and Metadata Storage

# # Directory where the broker data are stored
log.dirs=/var/lib/kafka/data

# # Directory where the broker metadata are stored
metadata.log.dir=/var/lib/kafka/meta
