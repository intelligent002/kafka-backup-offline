# Node ID
node.id={{ node_id }}

# Define the roles for this node (controller and broker)
process.roles=controller

# Unique cluster ID that must match across all nodes (controller and broker)
cluster.id={{ cluster_id }}

#############################################################################################
# Controller Quorum Configuration

# Configuration for the quorum of controllers, listing all controller nodes
controller.quorum.voters={% for host in (groups['combined'] | default([])) + (groups['controllers'] | default([])) %}
{{ hostvars[host]['node_id'] }}@{{ hostvars[host]['hostname'] }}:{{ hostvars[host]['port_service_ext'] }}{% if not loop.last %},{% endif %}{% endfor %}

# Timeout for controller quorum elections (in milliseconds)
controller.quorum.election.timeout.ms=10000

#############################################################################################
# Listeners and communication

{% if use_certificate %}

# Path to the keystore file (PKCS#12 format) containing the private key and certificate.
ssl.keystore.location=/etc/kafka/ssl/keystore.p12

# Password to unlock the keystore file. Same password is used for the private key.
ssl.keystore.password={{ keystore_password }}

# Password to unlock the private key in the keystore. Same password is used as the keystore password.
ssl.key.password={{ keystore_password }}

# Protocol used for controller-to-controller communication.
security.controller.protocol=SSL

# Alias of the certificate in the keystore to use
ssl.keystore.alias={{ keystore_certificate_name }}

{% endif %}

# Define the listener for controller-to-controller communication
listeners={% if use_certificate %}SSL{% else %}PLAINTEXT{% endif %}://0.0.0.0:{{ port_service_ext }}

# Specify the name of the listener used for controller communication
controller.listener.names=CONTROLLER

#############################################################################################
# Data

# Directory where the controller's metadata logs are stored
log.dirs=/var/lib/kafka/data