# === Nodes startup and shutdown order =================================================================================

# Defines the order of starting cluster nodes.
startup_order:
  - node-1
  - node-2
  - node-3
  - node-4
  - node-5
  - node-6

# Defines the order of shutting down cluster nodes.
shutdown_order:
  - node-6
  - node-5
  - node-4
  - node-3
  - node-2
  - node-1

# === Docker commands ==================================================================================================

# Run the nodes (all roles use the same command)
docker_command_containers_run_confluent: >
  docker run -d --restart=always --name={{ item }} -h {{ item }}
  -p {{ hostvars[item]['port_service_ext'] }}:{{ hostvars[item]['port_service_int'] }}
  -p {{ hostvars[item]['port_monitoring_ext'] }}:{{ hostvars[item]['port_monitoring_int'] }}
  -e KAFKA_HEAP_OPTS="-Xmx2G -Xms2G"
  -e KAFKA_JMX_OPTS="
  -Dcom.sun.management.jmxremote 
  -Dcom.sun.management.jmxremote.port={{ hostvars[item]['port_monitoring_int'] }}
  -Djava.rmi.server.hostname={{ hostvars[item]['ansible_host'] }}
  -Dcom.sun.management.jmxremote.rmi.port={{ hostvars[item]['port_monitoring_int'] }}
  -Dcom.sun.management.jmxremote.authenticate=false -Dcom.sun.management.jmxremote.ssl=false
  "
  -e KAFKA_OPTS="
  -Djava.security.auth.login.config=/etc/kafka/kafka_server_jaas.conf
  "
  -v {{ hostvars[item]['node_config_file'] }}:/etc/kafka/kraft.properties
  -v {{ hostvars[item]['node_credentials_file'] }}:/etc/kafka/kafka_server_jaas.conf
  -v {{ hostvars[item]['node_data_path'] }}:/var/lib/kafka/data
  -v {{ hostvars[item]['node_logs_path'] }}:/var/log/kafka
  -v {{ hostvars[item]['node_certificate_path'] }}:/etc/kafka/ssl
  confluentinc/cp-kafka:7.8.0
  /usr/bin/kafka-server-start /etc/kafka/kraft.properties

docker_command_containers_run: >
  docker run -d --name={{ hostvars[item]['hostname'] }} -h {{ hostvars[item]['hostname'] }}
  -p 9090:9090
  -p 9091:9091
  -p 9092:9092
  -p 9093:9093
  -p 9094:9094
  -p 9095:9095
  -p 29092:29092
  -p 29093:29093
  -p 29094:29094
  -e KAFKA_HEAP_OPTS="-Xmx2G -Xms2G"
  -e KAFKA_JMX_OPTS="
  -Djava.rmi.server.hostname={{ hostvars[item]['ansible_host'] }}
  -Dcom.sun.management.jmxremote 
  -Dcom.sun.management.jmxremote.port={{ hostvars[item]['port_monitoring_int'] }}
  -Dcom.sun.management.jmxremote.rmi.port={{ hostvars[item]['port_monitoring_int'] }}
  -Dcom.sun.management.jmxremote.authenticate=false
  -Dcom.sun.management.jmxremote.ssl=false
  "
  -e KAFKA_OPTS="
  -Djavax.net.ssl.trustStore=/etc/kafka/secrets/kafka.keystore.p12
  -Djavax.net.ssl.trustStorePassword=changeme1
  -Djavax.net.debug=ssl
  -Djava.security.auth.login.config=/etc/kafka/credentials/kafka_server_jaas.conf
  "
  -e JAVA_OPTS="
  -Djavax.net.ssl.trustStore=/etc/kafka/secrets/kafka.keystore.p12
  -Djavax.net.ssl.trustStorePassword=changeme1
  -Djavax.net.debug=ssl
  -Djava.security.auth.login.config=/etc/kafka/credentials/kafka_server_jaas.conf
  "
  -v {{ hostvars[item]['node_config_path'] }}:/mnt/shared/config
  -v {{ hostvars[item]['node_certificate_path'] }}:/etc/kafka/secrets
  -v {{ hostvars[item]['node_credentials_path'] }}:/etc/kafka/credentials
  -v {{ hostvars[item]['node_data_path'] }}:/var/lib/kafka/data
  -v {{ hostvars[item]['node_meta_path'] }}:/var/lib/kafka/meta
  -v {{ hostvars[item]['node_logs_path'] }}:/opt/kafka/logs
  docker.artifactory.intel.r7g.org/apache/kafka:3.8.0
  /opt/kafka/bin/kafka-server-start.sh /mnt/shared/config/kraft.properties

#ping 127.0.0.1
#  -p {{ hostvars[item]['port_monitoring_ext'] }}:{{ hostvars[item]['port_monitoring_int'] }}
#  -p {{ hostvars[item]['port_service_ext'] }}:{{ hostvars[item]['port_service_int'] }}
# openssl s_client -connect node-4.intel.r7g.org:9093 -showcerts


# Empty folder should be prepared for usage
docker_command_data_format_concluent: >
  docker run --rm
  -v {{ node_config_file }}:/etc/kafka/kraft.properties
  -v {{ node_data_path }}:/var/lib/kafka/data
  -v {{ node_logs_path }}:/var/log/kafka
  -v {{ node_certificate_path }}:/etc/kafka/ssl
  confluentinc/cp-kafka:7.8.0
  /usr/bin/kafka-storage format 
  --add-scram 'SCRAM-SHA-256=[name=admin,password=insecure]' 
  --cluster-id {{ cluster_id }} 
  --config /etc/kafka/kraft.properties

docker_command_data_format: >
  docker run --rm
  -v {{ node_config_path }}/:/mnt/shared/config
  -v {{ node_data_path }}:/var/lib/kafka/data
  -v {{ node_meta_path }}:/var/lib/kafka/meta
  -v {{ node_logs_path }}:/opt/kafka/logs
  -v {{ node_certificate_path }}/:/etc/kafka/secrets
  apache/kafka:3.9.0
  /opt/kafka/bin/kafka-storage.sh format
  --cluster-id {{ cluster_id }}
  --config /mnt/shared/config/kraft.properties
