# === General configuration =======================================================================

# Specifies the Python interpreter to be used on the remote nodes.
ansible_python_interpreter: /usr/bin/python

# === Cluster startup and shutdown order ==========================================================

# Defines the order of starting cluster nodes.
startup_order:
  - kafka-controller-1
  - kafka-controller-2
  - kafka-controller-3
  - kafka-broker-1
  - kafka-broker-2
  - kafka-broker-3

# Defines the order of shutting down cluster nodes.
shutdown_order:
  - kafka-broker-3
  - kafka-broker-2
  - kafka-broker-1
  - kafka-controller-3
  - kafka-controller-2
  - kafka-controller-1

# === Cluster Docker image configuration ==========================================================

# Docker image to be used for cluster, with version specified.
image: confluentinc/cp-kafka:7.8.0

# Specific configurations for cluster nodes
node_roles:
  kafka-controller-1:
    role: controller
    port_service_int: 9093
    port_service_ext: 9093
    port_monitoring_int: 9999
    port_monitoring_ext: 9999
  kafka-controller-2:
    role: controller
    port_service_int: 9093
    port_service_ext: 9093
    port_monitoring_int: 9999
    port_monitoring_ext: 9999
  kafka-controller-3:
    role: controller
    port_service_int: 9093
    port_service_ext: 9093
    port_monitoring_int: 9999
    port_monitoring_ext: 9999
  kafka-broker-1:
    role: broker
    port_service_int: 9092
    port_service_ext: 9092
    port_monitoring_int: 9999
    port_monitoring_ext: 9999
  kafka-broker-2:
    role: broker
    port_service_int: 9092
    port_service_ext: 9092
    port_monitoring_int: 9999
    port_monitoring_ext: 9999
  kafka-broker-3:
    role: broker
    port_service_int: 9092
    port_service_ext: 9092
    port_monitoring_int: 9999
    port_monitoring_ext: 9999

# Docker image to be used for cluster, with version specified.
docker_run_command: 'docker run -d --restart=always 
  --name={{ inventory_hostname }}  
  -h {{ inventory_hostname }} 
  -p {{ node_roles[item].port_service_ext }}:{{ node_roles[item].port_service_int }} 
  -p {{ node_roles[item].port_monitoring_ext }}:{{ node_roles[item].port_monitoring_int }} 
  -e KAFKA_JMX_OPTS="-Dcom.sun.management.jmxremote 
  -Dcom.sun.management.jmxremote.port={{ node_roles[item].port_monitoring_int }} 
  -Dcom.sun.management.jmxremote.rmi.port={{ node_roles[item].port_monitoring_int }} 
  -Dcom.sun.management.jmxremote.authenticate=false 
  -Dcom.sun.management.jmxremote.ssl=false 
  -Djava.rmi.server.hostname={{ ansible_host }}" 
  -v {{ node_config }}/kraft.properties:/etc/kafka/kraft.properties 
  -v {{ node_data }}:/var/lib/kafka/data 
  {{ image }} /usr/bin/kafka-server-start /etc/kafka/kraft.properties'

# === Backup retention policies ===================================================================

# Number of days to retain configuration backups.
retention_policy_config: 30

# Number of days to retain data backups.
retention_policy_data: 7

# === Backup directories ==========================================================================

# Directory for long-term storage (cold storage) of backups.
storage_cold: /backup/cold

# Temporary directory on central for extracting & creating of backup files.
storage_temp: /data/temp

# Directory containing the cluster node's configuration files.
node_config: /data/cluster/config

# Directory containing the cluster node's data files.
node_data: /data/cluster/data

# Temporary directory on nodes for extracting & creating archives for backups & restore.
node_temp: /data/temp

# === Restore archive parameter ==================================================================

# Path to the restore archive (to be provided via CLI parameters). Should be an absolute file path.
restore_archive: ""

# === Backup metadata =============================================================================

# Timestamp for the backup, formatted as "YYYY-MM-DD---HH-MM-SS".
backup_date: "{{ ansible_date_time.date }}---{{ ansible_date_time.time | replace(':', '-') }}"

# Path for storing configuration backups, organized by year/month/day.
backup_config_path: "{{ storage_cold }}/config/rotated/{{ ansible_date_time.year }}/{{ ansible_date_time.month }}/{{ ansible_date_time.day }}"

# Path for storing data backups, organized by year/month/day.
backup_data_path: "{{ storage_cold }}/data/rotated/{{ ansible_date_time.year }}/{{ ansible_date_time.month }}/{{ ansible_date_time.day }}"

# Full path for the configuration backup archive, named with a timestamp.
backup_config_archive: "{{ backup_config_path }}/{{ backup_date }}---config.zip"

# Full path for the data backup archive, named with a timestamp.
backup_data_archive: "{{ backup_data_path }}/{{ backup_date }}---data.zip"
