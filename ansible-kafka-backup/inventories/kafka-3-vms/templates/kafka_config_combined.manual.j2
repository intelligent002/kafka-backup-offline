process.roles=broker,controller
node.id={{ node_id }}
controller.quorum.voters={% for host in (groups['combined'] | default([])) + (groups['controllers'] | default([])) %}
{{ hostvars[host]['node_id'] }}@{{ hostvars[host]['hostname'] }}:{{ hostvars[host]['port_controller_ext'] }}{% if not loop.last %},{% endif %}{% endfor %}

# Listeners for broker and controller
listeners=SSL://127.0.0.1:9099,CONTROLLER://127.0.0.1:9098
advertised.listeners=SSL://127.0.0.1:9099
controller.listener.names=CONTROLLER

# Security settings
security.inter.broker.protocol=SSL
security.protocol=SSL

ssl.keystore.location=/home/ubuntu/SW/kafka/Certs/kafka.server.keystore.jks
ssl.keystore.password=kafka123
ssl.key.password=kafka123
ssl.truststore.location=/home/ubuntu/SW/kafka/Certs/kafka.server.truststore.jks
ssl.truststore.password=kafka123

# Protocol mappings
listener.security.protocol.map=SSL:SSL,CONTROLLER:PLAINTEXT

# SSL settings
ssl.enabled.protocols=TLSv1.2
ssl.truststore.type=JKS
ssl.keystore.type=JKS
ssl.client.auth=required
ssl.secure.random.implementation=SHA1PRNG
ssl.cipher.suites=TLS_ECDHE_RSA_WITH_AES_128_CBC_SHA256
ssl.endpoint.identification.algorithm=

# Network settings
num.network.threads=3
num.io.threads=8
socket.send.buffer.bytes=102400
socket.receive.buffer.bytes=102400
socket.request.max.bytes=104857600

# Replication and transactions
offsets.topic.replication.factor=1
transaction.state.log.replication.factor=1
transaction.state.log.min.isr=1

# Log directories
log.dirs=/tmp/kraft-combined-logs