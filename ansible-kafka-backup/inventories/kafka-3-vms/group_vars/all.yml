# === General config ==============================================================================

# Specifies the Python interpreter to be used on the remote nodes.
ansible_python_interpreter: /usr/bin/python

ansible_user: root
ansible_key_pub: /root/.ssh/id_rsa.pub
ansible_key_pri: /root/.ssh/id_rsa

# === Cluster startup and shutdown order ==========================================================

# Defines the order of starting cluster nodes.
startup_order:
  - kafka-node-1
  - kafka-node-2
  - kafka-node-3

# Defines the order of shutting down cluster nodes.
shutdown_order:
  - kafka-node-3
  - kafka-node-2
  - kafka-node-1

# === Cluster Docker image config =================================================================

# Service user
data_owner_user: 1000

# Service group
data_owner_group: 1000

# Data folder permissions
data_folder_chmod: 0755

# Specific configs for cluster nodes
nodes:
  kafka-node-1:
    role: controller
    port_controller_int: 9093
    port_controller_ext: 9093
    port_broker_int: 9092
    port_broker_ext: 9092
    port_monitoring_int: 9999
    port_monitoring_ext: 9999
  kafka-node-2:
    role: controller
    port_controller_int: 9093
    port_controller_ext: 9093
    port_broker_int: 9092
    port_broker_ext: 9092
    port_monitoring_int: 9999
    port_monitoring_ext: 9999
  kafka-node-3:
    role: controller
    port_controller_int: 9093
    port_controller_ext: 9093
    port_broker_int: 9092
    port_broker_ext: 9092
    port_monitoring_int: 9999
    port_monitoring_ext: 9999

cluster_id: 'AkU3OEVBNTcwNTJENDM2Qk'

# Docker command to run the cluster containers, combining all nodes details
docker_command_containers_run: 'docker run -d --restart=always 
  --name={{ inventory_hostname }}  
  -h {{ inventory_hostname }} 
  -p {{ nodes[item].port_broker_ext }}:{{ nodes[item].port_broker_int }} 
  -p {{ nodes[item].port_controller_ext }}:{{ nodes[item].port_controller_int }} 
  -p {{ nodes[item].port_monitoring_ext }}:{{ nodes[item].port_monitoring_int }} 
  -e KAFKA_HEAP_OPTS="-Xmx2G -Xms2G"
  -e KAFKA_JMX_OPTS="-Dcom.sun.management.jmxremote 
  -Dcom.sun.management.jmxremote.port={{ nodes[item].port_monitoring_int }} 
  -Dcom.sun.management.jmxremote.rmi.port={{ nodes[item].port_monitoring_int }} 
  -Dcom.sun.management.jmxremote.authenticate=false 
  -Dcom.sun.management.jmxremote.ssl=false 
  -Djava.rmi.server.hostname={{ ansible_host }}" 
  -v {{ node_config }}/kraft.properties:/etc/kafka/kraft.properties 
  -v {{ node_data }}:/var/lib/kafka/data 
  -v {{ node_logs }}:/var/log/kafka
  -v {{ node_certs }}:/etc/kafka/ssl
  confluentinc/cp-kafka:7.8.0 /usr/bin/kafka-server-start /etc/kafka/kraft.properties'

# Docker command to run the cluster containers, combining all nodes details
docker_command_data_format: 'docker run --rm 
  -v {{ node_config }}/kraft.properties:/etc/kafka/kraft.properties
  -v {{ node_data }}:/var/lib/kafka/data 
  -v {{ node_logs }}:/var/log/kafka
  -v {{ node_certs }}:/etc/kafka/ssl
  confluentinc/cp-kafka:7.8.0 /usr/bin/kafka-storage format -t {{ cluster_id }} -c /etc/kafka/kraft.properties'

# === Backup retention policies ===================================================================

# Number of days to retain config backups.
retention_policy_config: 30

# Number of days to retain data backups.
retention_policy_data: 7

# === Backup directories ==========================================================================

# Directory for long-term storage (cold storage) of backups.
storage_cold: /backup/cold

# Temporary directory on central for extracting & creating of backup files.
storage_temp: /data/temp

# Directory on central for certificates.
storage_certificate: /data/certificate

# Directory containing the cluster node's config files.
node_config: /data/cluster/config

# Directory containing the cluster node's data files.
node_data: /data/cluster/data

# Directory containing the cluster node's logs files.
node_logs: /data/cluster/logs

# Directory containing the cluster node's certificate files.
node_certificate: /data/cluster/certificate

# Temporary directory on nodes for extracting & creating archives for backups & restores.
node_temp: /data/temp

# === Certificates related parameters =============================================================

certificate_host: "wildcard.intel.r7g.org"
certificate_file_fullchain: "{{ storage_certs }}/wildcard.intel.r7g.org-ACME.fullchain"
certificate_file_key: "{{ storage_certs }}/wildcard.intel.r7g.org-ACME.key"
certificate_file_ca: "{{ storage_certs }}/wildcard.intel.r7g.org-ACME.ca"
certificate_file_p12: "{{ storage_certs }}/wildcard.intel.r7g.org-ACME.p12"
keystore_password: "bla-bla!"
certificate_expiration_threshold: 30

certbot_domain: "*.cluster.intel.r7g.org"
certbot_email: "intelligent002@gmail.com"
cloudflare_api_token: "eUIBUat5jTt3XuBZ2UMkI0REl_WLoLzuwRYlKjDh"
docker_certbot_image: "certbot/dns-cloudflare"
certbot_volume_path: "/data/certificate"

# === Restore archive parameter ===================================================================

# Path to the restore archive (to be provided via CLI parameters). Should be an absolute file path.
restore_archive: ""

# === Backup metadata =============================================================================

# Timestamp for the backup, formatted as "YYYY-MM-DD---HH-MM-SS".
backup_date: "{{ ansible_date_time.date }}---{{ ansible_date_time.time | replace(':', '-') }}"

# Path for storing config backups, organized by year/month/day.
certificate_backup_path: "{{ storage_cold }}/certificate/rotated/{{ ansible_date_time.year }}/{{ ansible_date_time.month }}/{{ ansible_date_time.day }}"

# Full path for the config backup archive, named with a timestamp.
certificate_backup_archive: "{{ certificate_backup_path }}/{{ backup_date }}---certificate.tar.zx"

# Path for storing config backups, organized by year/month/day.
config_backup_path: "{{ storage_cold }}/config/rotated/{{ ansible_date_time.year }}/{{ ansible_date_time.month }}/{{ ansible_date_time.day }}"

# Full path for the config backup archive, named with a timestamp.
config_backup_archive: "{{ config_backup_path }}/{{ backup_date }}---config.tar.zx"

# Path for storing data backups, organized by year/month/day.
data_backup_path: "{{ storage_cold }}/data/rotated/{{ ansible_date_time.year }}/{{ ansible_date_time.month }}/{{ ansible_date_time.day }}"

# Full path for the data backup archive, named with a timestamp.
data_backup_archive: "{{ data_backup_path }}/{{ backup_date }}---data.tar.zx"
