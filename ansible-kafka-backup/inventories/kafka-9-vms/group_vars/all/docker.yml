# === Nodes startup and shutdown order =================================================================================

# Defines the order of starting cluster nodes.
startup_order:
  - node-1
  - node-2
  - node-3
  - node-4
  - node-5
  - node-6
  - node-7
  - node-8
  - node-9

# Defines the order of shutting down cluster nodes.
shutdown_order:
  - node-9
  - node-8
  - node-7
  - node-6
  - node-5
  - node-4
  - node-3
  - node-2
  - node-1

shmoker_h:
  smoker: |
    bla \
    blo \
    ble
  huyoker: ble
  blo: bli

# === Docker commands ==================================================================================================

# Run the kafka roles
docker_run_role:
  controllers: |
    docker run -d --restart=always \
    --name={{ hostvars[inventory_hostname].hostname }} -h {{ hostvars[inventory_hostname].hostname }} \
    -p {{ hostvars[inventory_hostname]['port_jmx_monitoring_ext'] }}:{{ hostvars[inventory_hostname]['port_jmx_monitoring_int'] }} \
    -p {{ hostvars[inventory_hostname]['port_control_plane_ext'] }}:{{ hostvars[inventory_hostname]['port_control_plane_int'] }} \
    -p {{ hostvars[inventory_hostname]['port_replication_ext'] }}:{{ hostvars[inventory_hostname]['port_replication_int'] }} \
    -p {{ hostvars[inventory_hostname]['port_consumer_mtls_ext'] }}:{{ hostvars[inventory_hostname]['port_consumer_mtls_int'] }} \
    -p {{ hostvars[inventory_hostname]['port_consumer_sasl_ext'] }}:{{ hostvars[inventory_hostname]['port_consumer_sasl_int'] }} \
    -e KAFKA_HEAP_OPTS="-Xmx2G -Xms2G" \
    -e KAFKA_JMX_OPTS=" \
    -Djava.rmi.server.hostname={{ hostvars[inventory_hostname]['ansible_host'] }} \
    -Dcom.sun.management.jmxremote \
    -Dcom.sun.management.jmxremote.port={{ hostvars[inventory_hostname]['port_jmx_monitoring_int'] }} \
    -Dcom.sun.management.jmxremote.rmi.port={{ hostvars[inventory_hostname]['port_jmx_monitoring_int'] }} \
    -Dcom.sun.management.jmxremote.authenticate=false \
    -Dcom.sun.management.jmxremote.ssl=false \
    " \
    -v {{ hostvars[inventory_hostname]['node_config_path'] }}:/mnt/shared/config \
    -v {{ hostvars[inventory_hostname]['node_certificate_path'] }}:/etc/kafka/secrets \
    -v {{ hostvars[inventory_hostname]['node_credentials_path'] }}:/credentials \
    -v {{ hostvars[inventory_hostname]['node_data_path'] }}:/var/lib/kafka/data \
    -v {{ hostvars[inventory_hostname]['node_meta_path'] }}:/var/lib/kafka/meta \
    -v {{ hostvars[inventory_hostname]['node_logs_path'] }}:/opt/kafka/logs \
    apache/kafka:3.9.0 \
    /opt/kafka/bin/kafka-server-start.sh /mnt/shared/config/kraft.properties

  brokers: |
    docker run -d --restart=always \
    --name={{ hostvars[inventory_hostname].hostname }} -h {{ hostvars[inventory_hostname].hostname }} \
    -p {{ hostvars[inventory_hostname]['port_jmx_monitoring_ext'] }}:{{ hostvars[inventory_hostname]['port_jmx_monitoring_int'] }} \
    -p {{ hostvars[inventory_hostname]['port_control_plane_ext'] }}:{{ hostvars[inventory_hostname]['port_control_plane_int'] }} \
    -p {{ hostvars[inventory_hostname]['port_replication_ext'] }}:{{ hostvars[inventory_hostname]['port_replication_int'] }} \
    -p {{ hostvars[inventory_hostname]['port_consumer_mtls_ext'] }}:{{ hostvars[inventory_hostname]['port_consumer_mtls_int'] }} \
    -p {{ hostvars[inventory_hostname]['port_consumer_sasl_ext'] }}:{{ hostvars[inventory_hostname]['port_consumer_sasl_int'] }} \
    -e KAFKA_HEAP_OPTS="-Xmx2G -Xms2G" \
    -e KAFKA_JMX_OPTS=" \
    -Djava.rmi.server.hostname={{ hostvars[inventory_hostname]['ansible_host'] }} \
    -Dcom.sun.management.jmxremote \
    -Dcom.sun.management.jmxremote.port={{ hostvars[inventory_hostname]['port_jmx_monitoring_int'] }} \
    -Dcom.sun.management.jmxremote.rmi.port={{ hostvars[inventory_hostname]['port_jmx_monitoring_int'] }} \
    -Dcom.sun.management.jmxremote.authenticate=false \
    -Dcom.sun.management.jmxremote.ssl=false \
    " \
    -v {{ hostvars[inventory_hostname]['node_config_path'] }}:/mnt/shared/config \
    -v {{ hostvars[inventory_hostname]['node_certificate_path'] }}:/etc/kafka/secrets \
    -v {{ hostvars[inventory_hostname]['node_credentials_path'] }}:/credentials \
    -v {{ hostvars[inventory_hostname]['node_data_path'] }}:/var/lib/kafka/data \
    -v {{ hostvars[inventory_hostname]['node_meta_path'] }}:/var/lib/kafka/meta \
    -v {{ hostvars[inventory_hostname]['node_logs_path'] }}:/opt/kafka/logs \
    apache/kafka:3.9.0 \
    /opt/kafka/bin/kafka-server-start.sh /mnt/shared/config/kraft.properties

  connect: |
    docker run -d --restart=always \
    --name=node-7.intel.r7g.org -h node-7.intel.r7g.org \
    -p {{ hostvars[inventory_hostname]['port_jmx_monitoring_ext'] }}:{{ hostvars[inventory_hostname]['port_jmx_monitoring_int'] }} \
    -p {{ hostvars[inventory_hostname]['port_connect_rest_ext'] }}:{{ hostvars[inventory_hostname]['port_connect_rest_int'] }} \
    -e KAFKA_HEAP_OPTS="-Xmx2G -Xms2G" \
    -e KAFKA_JMX_OPTS=" \
    -Djava.rmi.server.hostname={{ hostvars[inventory_hostname]['ansible_host'] }} \
    -Dcom.sun.management.jmxremote \
    -Dcom.sun.management.jmxremote.port={{ hostvars[inventory_hostname]['port_jmx_monitoring_int'] }} \
    -Dcom.sun.management.jmxremote.rmi.port={{ hostvars[inventory_hostname]['port_jmx_monitoring_int'] }} \
    -Dcom.sun.management.jmxremote.authenticate=false \
    -Dcom.sun.management.jmxremote.ssl=false \
    " \
    -v /data/cluster/config:/mnt/shared/config \
    -v /data/cluster/certificate:/etc/kafka/secrets \
    -v /data/cluster/credentials:/credentials \
    -v /data/cluster/logs:/opt/kafka/logs \
    -v /data/cluster/connector-plugins:/usr/share/java \
    apache/kafka:3.9.0 \
    /opt/kafka/bin/connect-distributed.sh /mnt/shared/config/connect-worker.properties


docker_run_data_format: |
  docker run --rm -u root
  -v {{ node_config_path }}/:/mnt/shared/config
  -v {{ node_data_path }}:/var/lib/kafka/data
  -v {{ node_meta_path }}:/var/lib/kafka/meta
  -v {{ node_logs_path }}:/opt/kafka/logs
  -v {{ node_certificate_path }}/:/etc/kafka/secrets
  apache/kafka:3.9.0
  /opt/kafka/bin/kafka-storage.sh format
  --cluster-id {{ cluster_id }}
  --add-scram 'SCRAM-SHA-512=[name=admin,password=changeme]'
  --config /mnt/shared/config/kraft.properties
