---
- name: Assign node roles based on inventory group
  tags:
    - containers_run
  set_fact:
    group_roles: "{{ group_roles | default({}) | combine({item: hostvars[item]['group_names'] | difference(['cluster'])}) }}"
  with_items: "{{ startup_order }}"
  run_once: true

- name: Show assigned roles per node
  tags:
    - containers_run
  debug:
    msg: "Node: {{ item }} -> Roles: {{ group_roles[item] | default('No role assigned') }}"
  with_items: "{{ startup_order }}"
  run_once: true

- name: Run containers according to assigned roles
  tags:
    - containers_run
  delegate_to: "{{ item }}"
  run_once: true
  ignore_errors: true
  shell: >
    {% if 'controllers' in group_roles[item] %} {{ docker_command_controllers_run }}
    {% elif 'brokers' in group_roles[item] %} {{ docker_command_brokers_run }}
    {% elif 'connect' in group_roles[item] %} {{ docker_command_connect_run }}
    {% else %} echo 'Undefined group, no command executed'
    {% endif %}
  with_items: "{{ startup_order }}"
  when: group_roles[item] is defined
  register: docker_results

- name: Display container startup results and fail if any errors occurred
  tags:
    - containers_run
  run_once: true
  block:
    - name: Display container startup outputs
      debug:
        msg: > 
          Node: {{ item.item }} -> 
          {% if item.rc == 0 and item.stdout | trim != "" %} Container ID: {{ item.stdout | trim }} 
          {% elif item.rc != 0 %} Error: {{ item.stderr | trim }} 
          {% else %} No output received 
          {% endif %}
      with_items: "{{ docker_results.results }}"

    - name: Fail playbook if any container startup failed
      fail:
        msg: "Container startup failed on node {{ item.item }}. Error: {{ item.stderr | trim }}"
      with_items: "{{ docker_results.results }}"
      when: item.rc != 0


# old variant - single command for all containers
#- name: Run docker containers in startup order
#  tags:
#    - containers_run
#  shell: "{{ docker_command_controllers_run }}"
#  delegate_to: "{{ item }}"
#  with_items: "{{ startup_order }}"
#  run_once: true  # Ensure task runs only once on localhost
