---
- name: Archive cluster certificate on nodes
  tags:
    - certificate_backup
  community.general.archive:
    path: "{{ node_certificate_path }}/"  # The directory or files to be archived
    dest: "{{ node_temp_path }}/{{ inventory_hostname }}-certificate.tar.zx"  # Destination archive
    format: xz  # Use XZ compression
    remove: no  # Set to 'yes' to remove the original files after archiving
  register: certificate_archive_result

- name: Pull node archives from nodes into central
  tags:
    - certificate_backup
  delegate_to: node-0
  synchronize:
    src: "{{ node_temp_path }}/{{ inventory_hostname }}-certificate.tar.zx"
    dest: "{{ storage_temp_path }}/{{ inventory_hostname }}-certificate.tar.zx"
    mode: pull
  register: synchronize_certificate_archive_result

# Create directory path for zip-of-zips archive (/backup/cold/certificate/2025/01/01/)
- name: Create backup path folders
  tags:
    - certificate_backup
  delegate_to: node-0
  run_once: true
  file:
    path: "{{ certificate_backup_path }}"
    state: directory
    mode: '0755'

- name: Archive cluster certificate into zip of zips
  tags:
    - certificate_backup
  delegate_to: node-0
  run_once: true
  community.general.archive:
    path: "{{ storage_temp_path }}/"  # The directory or files to be archived
    dest: "{{ certificate_backup_archive }}"  # Destination archive
    format: xz  # Use XZ compression
    remove: no  # Set to 'yes' to remove the original files after archiving
  register: zip_of_zips_results
