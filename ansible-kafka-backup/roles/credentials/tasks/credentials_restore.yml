---
- name: Verify archive exists
  tags:
    - credentials_restore
  delegate_to: node-0
  run_once: true
  stat:
    path: "{{ restore_archive }}"
  register: archive_stat

- name: Fail if archive does not exist
  tags:
    - credentials_restore
  fail:
    msg: "The specified restore archive {{ restore_archive }} does not exist!"
  when: not archive_stat.stat.exists

- name: Extract credentials archive to temp on central
  tags:
    - credentials_restore
  delegate_to: node-0
  run_once: true
  unarchive:
    src: "{{ restore_archive }}"
    dest: "{{ storage_temp_path }}"
    remote_src: yes

- name: Push node archives from central into nodes
  tags:
    - credentials_restore
  delegate_to: node-0
  synchronize:
    src: "{{ storage_temp_path }}/{{ inventory_hostname }}-credentials.tar.zx"
    dest: "{{ node_temp_path }}/{{ inventory_hostname }}-credentials.tar.zx"
    mode: push

- name: Remove cluster credentials folder on nodes
  tags:
    - credentials_restore
  file:
    path: "{{ node_credentials_path }}"
    state: absent

- name: Create cluster credentials folder on nodes
  tags:
    - credentials_restore
  file:
    path: "{{ node_credentials_path }}"
    state: directory
    mode: '0755'

- name: Restore cluster credentials on nodes
  tags:
    - credentials_restore
  unarchive:
    src: "{{ node_temp_path }}/{{ inventory_hostname }}-credentials.tar.zx"
    dest: "{{ node_credentials_path }}"
    remote_src: yes
