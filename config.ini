[general]
# prevent running multiple instances of kafka-backup-offline
PID_FILE=/tmp/kafka-backup-offline.pid
# full executions log
LOG_FILE=/backup/log/kafka-backup-offline.log
# less noise. INFO is the optimal, available are: DEBUG,INFO,WARN,ERROR
LOG_LEVEL=INFO

[ssh]
# SSH Private key
SSH_KEY_PRI=/root/.ssh/id_rsa
# SSH Public key
SSH_KEY_PUB=/root/.ssh/id_rsa.pub
# SSH User that will operate the docker containers and zip files
SSH_USER=root

[storage]
# here we will accumulate the node backups and create zip of zips
STORAGE_TEMP=/data/temp
# here we will store the backups (zip of zips)
STORAGE_COLD=/backup/cold
# keep backups of the last 30 days
STORAGE_RETENTION_POLICY=30
# warn if the storage is below 20%
STORAGE_WARN_LOW=20

[cluster]
# Currently the containers supported are confluent based
#IMAGE=confluentinc/cp-kafka:7.8.0
IMAGE=apache/kafka:3.9.0
# Used during cluster data format
CLUSTER_ID=AkU3OEVBNTcwNTJENDM2Qk
# Location of cluster config on all nodes (brokers & controllers)
NODE_CONFIG=/data/cluster/config
# Location of cluster data on all nodes (brokers & controllers)
NODE_DATA=/data/cluster/data/logs
# Location of cluster meta on all nodes (brokers & controllers)
NODE_META=/data/cluster/data/meta
# Location of cluster logs on all nodes (brokers & controllers)
NODE_LOGS=/data/cluster/logs
# Location of cluster cert on all nodes (brokers & controllers)
NODE_CERT=/data/cluster/certificate
# Location of cluster cred on all nodes (brokers & controllers)
NODE_CRED=/data/cluster/credentials
# here we will create the node backups
NODE_TEMP=/data/temp

[nodes]
kafka-controller-1=10.1.3.21
kafka-controller-2=10.1.3.22
kafka-controller-3=10.1.3.23
kafka-broker-1=10.1.3.24
kafka-broker-2=10.1.3.25
kafka-broker-3=10.1.3.26

[order]
startup=kafka-controller-1,kafka-controller-2,kafka-controller-3,kafka-broker-1,kafka-broker-2,kafka-broker-3
shutdown=kafka-broker-3,kafka-broker-2,kafka-broker-1,kafka-controller-3,kafka-controller-2,kafka-controller-1