# Node ID
node.id=5

# Define the roles for this node
process.roles=broker

# Unique cluster ID that must match across all controllers and brokers
cluster.id=AkU3OEVBNTcwNTJENDM2Qk

#############################################################################################
# Configuration for the quorum of controllers, listing all controller nodes
controller.quorum.voters=1@10.1.3.21:9093,2@10.1.3.22:9093,3@10.1.3.23:9093

#############################################################################################
# Listeners and communication

# Specifies the network interface and port where the broker listens for client requests
listeners=PLAINTEXT://0.0.0.0:9092

# This is the address and port advertised to clients for connecting to this broker
advertised.listeners=PLAINTEXT://10.1.3.25:9092

# Specifies the listener name used for communication between brokers and controllers
controller.listener.names=CONTROLLER

# Specifies the listener name used for communication between brokers
inter.broker.listener.name=PLAINTEXT

#############################################################################################
# Replication and ISR Settings

# Replication settings for system topics to ensure high availability and fault tolerance

# Replication factor for the __consumer_offsets topic
offsets.topic.replication.factor=3

# Replication factor for the __transaction_state topic
transaction.state.log.replication.factor=3

# Minimum number of in-sync replicas required for transactional writes
transaction.state.log.min.isr=2

# Number of partitions for the __transaction_state topic
transaction.state.log.num.partitions=50

#############################################################################################
# Transactions

# Defines how often the broker will clean up expired or timed-out transactions
transaction.abort.timed.out.transaction.cleanup.interval.ms=300000

#############################################################################################
# Data

# This is where Kafka stores data for topics and logs
log.dirs=/var/lib/kafka/data

# Interval for checking and applying log retention policies (in ms)
log.retention.check.interval.ms=300000

# Retention period for logs before they are eligible for deletion (in hours)
log.retention.hours=168

# Maximum size of a single log segment before it is rolled over (in bytes, 1 GB)
log.segment.bytes=1073741824

# Enable log cleaner for log compaction
log.cleaner.enable=true

#############################################################################################
# Performance

# Number of threads for handling network requests
# Determines how many threads are allocated for processing network communication
num.network.threads=3

# Number of threads for handling I/O operations
# Controls how many threads are used for reading from and writing to disk
num.io.threads=8

#############################################################################################
# Recovery Mode

# Number of threads for log recovery during broker startup or failure recovery
# More threads can speed up recovery times but require more CPU resources
num.recovery.threads.per.data.dir=2

#############################################################################################
# Safe Mode

# Disable automatic topic creation in production for better control
# This setting prevents Kafka from automatically creating topics when clients request them
auto.create.topics.enable=true