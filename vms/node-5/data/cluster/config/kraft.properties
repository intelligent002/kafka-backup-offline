#############################################################################################
# Node ID
node.id=5

# Unique cluster ID that must match across all nodes (controller and broker)
cluster.id=AkU3OEVBNTcwNTJENDM2Qk

# Define the roles for this node (controller/broker/connect)
process.roles=broker

#############################################################################################
# Controller KRaft Quorum Configuration

# Specify the name of the listener used for controller communication
controller.listener.names=CONTROLPLANE-9091

# Define the quorum of controllers with their respective node IDs and addresses
controller.quorum.voters=1@node-1.intel.r7g.org:9091,2@node-2.intel.r7g.org:9091,3@node-3.intel.r7g.org:9091

#############################################################################################
# Listener - Control Plane (controller-broker via mTLS)

listener.name.controlplane-9091.ssl.client.auth=required
listener.name.controlplane-9091.ssl.keystore.location=/etc/kafka/secrets/node-5.intel.r7g.org.jks
listener.name.controlplane-9091.ssl.keystore.password=insecure
listener.name.controlplane-9091.ssl.keystore.type=JKS
listener.name.controlplane-9091.ssl.truststore.location=/etc/kafka/secrets/shared.truststore.jks
listener.name.controlplane-9091.ssl.truststore.password=insecure
listener.name.controlplane-9091.ssl.truststore.type=JKS

#############################################################################################
# Listener - Replication (broker-broker via mTLS)

listener.name.replication-9092.ssl.client.auth=required
listener.name.replication-9092.ssl.keystore.location=/etc/kafka/secrets/node-5.intel.r7g.org.jks
listener.name.replication-9092.ssl.keystore.password=insecure
listener.name.replication-9092.ssl.keystore.type=JKS
listener.name.replication-9092.ssl.truststore.location=/etc/kafka/secrets/shared.truststore.jks
listener.name.replication-9092.ssl.truststore.password=insecure
listener.name.replication-9092.ssl.truststore.type=JKS

#############################################################################################
# Listener - Consumers (client-broker via mTLS)

listener.name.consumers-mtls-9093.ssl.client.auth=required
listener.name.consumers-mtls-9093.ssl.keystore.location=/etc/kafka/secrets/node-5.intel.r7g.org.jks
listener.name.consumers-mtls-9093.ssl.keystore.password=insecure
listener.name.consumers-mtls-9093.ssl.keystore.type=JKS
listener.name.consumers-mtls-9093.ssl.truststore.location=/etc/kafka/secrets/shared.truststore.jks
listener.name.consumers-mtls-9093.ssl.truststore.password=insecure
listener.name.consumers-mtls-9093.ssl.truststore.type=JKS

#############################################################################################
# Listener - Consumers (client-broker via SASL_SSL)

listener.name.consumers-sasl-9095.scram-sha-512.sasl.jaas.config=org.apache.kafka.common.security.scram.ScramLoginModule required username="admin" password="insecure";
listener.name.consumers-sasl-9095.sasl.enabled.mechanisms=SCRAM-SHA-512
listener.name.consumers-sasl-9095.ssl.keystore.location=/etc/kafka/secrets/node-5.intel.r7g.org.jks
listener.name.consumers-sasl-9095.ssl.keystore.password=insecure
listener.name.consumers-sasl-9095.ssl.keystore.type=JKS
listener.name.consumers-sasl-9095.ssl.truststore.location=/etc/kafka/secrets/shared.truststore.jks
listener.name.consumers-sasl-9095.ssl.truststore.password=insecure
listener.name.consumers-sasl-9095.ssl.truststore.type=JKS

#############################################################################################
# Common listener configuration

# Advertise the broker listener for clients to connect
advertised.listeners=REPLICATION-9092://node-5.intel.r7g.org:9092,CONSUMERS-MTLS-9093://node-5.intel.r7g.org:9093,CONSUMERS-SASL-9095://node-5.intel.r7g.org:9095

# Define the security protocol for inter-broker communication
inter.broker.listener.name=REPLICATION-9092

# Map listeners to their respective security protocols
listener.security.protocol.map=CONTROLPLANE-9091:SSL,REPLICATION-9092:SSL,CONSUMERS-MTLS-9093:SSL,CONSUMERS-SASL-9095:SASL_SSL

# Broker listeners
listeners=REPLICATION-9092://:9092,CONSUMERS-MTLS-9093://:9093,CONSUMERS-SASL-9095://:9095

#############################################################################################
# Authorization

# Hostname verification in SSL certificates (HTTPS - enable, empty - disable)
ssl.endpoint.identification.algorithm=HTTPS

# Defines the authorizer class to enable ACL-based authorization
authorizer.class.name=org.apache.kafka.metadata.authorizer.StandardAuthorizer

# Global fallback per SASL authentication mechanisms (SCRAM-SHA-256/512 for SSL, PLAIN for plaintext, EMPTY to disable globally)
# This is a global fallback setting.
# Listener settings will take precedence.
sasl.enabled.mechanisms=

# Specifies superusers that bypass the ACL checks
super.users=User:CN=node-1.intel.r7g.org;User:node-1.intel.r7g.org;User:CN=node-2.intel.r7g.org;User:node-2.intel.r7g.org;User:CN=node-3.intel.r7g.org;User:node-3.intel.r7g.org;User:CN=node-4.intel.r7g.org;User:node-4.intel.r7g.org;User:CN=node-5.intel.r7g.org;User:node-5.intel.r7g.org;User:CN=node-6.intel.r7g.org;User:node-6.intel.r7g.org;User:CN=admin;User:admin;


#############################################################################################
# Replication

# The replication factor for automatically created topics, and for topics created with -1 as the replication factor
default.replication.factor=3

# When a producer sets acks to "all" (or "-1"), min.insync.replicas specifies the minimum number of replicas
# that must acknowledge a write for the write to be considered successful.
min.insync.replicas=2

# The replication factor for the __consumer_offsets topic (set higher to ensure availability).
# Internal topic creation will fail until the cluster size meets this replication factor requirement.
offsets.topic.replication.factor=3

# The minimum number of replicas that must acknowledge a write to transaction topic in order to be considered successful.
transaction.state.log.min.isr=2

#############################################################################################
# Transactions

# The replication factor for the __transaction_state topic (set higher to ensure availability).
# Internal topic creation will fail until the cluster size meets this replication factor requirement.
transaction.state.log.replication.factor=3

# Number of partitions for the __transaction_state topic
transaction.state.log.num.partitions=50

# The interval at which to rollback transactions that have timed out
transaction.abort.timed.out.transaction.cleanup.interval.ms=300000

#############################################################################################
# Performance Settings

# The number of threads that the server uses for receiving requests from the network and sending responses to the network.
# Noted: each listener (except for controller listener) creates its own thread pool.
num.network.threads=6

# The number of threads that the server uses for processing requests, which may include disk I/O
num.io.threads=8

# The number of threads per data directory to be used for log recovery at startup and flushing at shutdown
num.recovery.threads.per.data.dir=2

#############################################################################################
# Log Flush Policy

# The number of messages accumulated on a log partition before messages are flushed to disk.
log.flush.interval.messages=10000

# The maximum time in ms that a message in any topic is kept in memory before flushed to disk.
# If not set, the value in log.flush.scheduler.interval.ms is used
log.flush.interval.ms=1000

#############################################################################################
# Security Settings

# Enable/Disable automatic topic creation (recommended to disable for production)
auto.create.topics.enable=true

# Enforce re-authentication every 24 hours
connections.max.reauth.ms=86400000

#############################################################################################
# Data and Metadata Storage

# Directory where the broker data are stored
log.dirs=/var/lib/kafka/data

# Directory where the broker metadata are stored
metadata.log.dir=/var/lib/kafka/meta

# The frequency in milliseconds that the log cleaner checks whether any log is eligible for deletion
log.retention.check.interval.ms=300000

# The number of hours to keep a log file before deleting it (in hours)
# This is a global fallback setting.
# Topic retention setting will take precedence.
log.retention.hours=168

# Maximum size of a single log segment before it is rolled over (in bytes, 1 GB)
log.segment.bytes=1073741824

# Enable log cleaner for log compaction
log.cleaner.enable=true